#include <iostream>
#include <string>
#include<Windows.h>
using namespace std;

#define STUDENTMAX 10

struct Student
{
	string Name;
	int Age;
	int Class;
	int Number;
	int kor;
	int eng;
	int math;
	int Sum;
	float Avr;
	char Grade;
};

void SetStudent(Student* S, int Num)
{
	S->Number = Num;
	cout << "    ======" << S->Number << "번째 학생" << "======" << endl;
	cout << "    이름 : ";
	cin >> S->Name;
	cout << "    나이 : ";
	cin >> S->Age;
	while (1)
	{
		cout << "    학년(1~3) : ";
		cin >> S->Class;
		if (S->Class >= 1 && S->Class <= 3)
			break;
		cout << "잘못 입력 다시 " << endl;
	}
	cout << "    국어점수 : ";
	cin >> S->kor;
	cout << "    영어점수 : ";
	cin >> S->eng;
	cout << "    수학점수 : ";
	cin >> S->math;
	S->Sum = S->kor + S->eng + S->math;
	S->Avr = (float)S->Sum / 3.0f;
	if (S->Avr >= 90)
		S->Grade = 'A';
	else if (S->Avr >= 80)
		S->Grade = 'B';
	else if (S->Avr >= 70)
		S->Grade = 'C';
	else if (S->Avr >= 60)
		S->Grade = 'D';
	else
		S->Grade = 'F';
}


void ShowStudent(Student* S)
{
	cout << "    ======" << S->Number << "번째 학생" << "======" << endl;
	cout << "    이름 : " << S->Name << endl;
	cout << "    나이 : " << S->Age << "살" << endl;
	cout << "    학년 : " << S->Class << "학년" << endl;
	cout << "    국어점수 : " << S->kor << endl;
	cout << "    영어점수 : " << S->eng << endl;
	cout << "    수학점수 : " << S->math << endl;
	cout << "    합계 점수 : " << S->Sum << "    평균 점수 : " << S->Avr << endl;
	cout << "    등급 : [" << S->Grade << "]" << endl << endl;
}


void FindGrade(Student** StudentList, char ch, int StudentCount)
{
	cout << "┌─────────" << ch << " 등급" << "─────────┐" << endl;
	for (int i = 0; i < StudentCount; i++)
	{
		if (StudentList[i]->Grade == ch)
			ShowStudent(StudentList[i]);
	}
	cout << "└─────────────────────┘" << endl;
}

void FindClass(Student** StudentList, int num, int StudentCount)
{
	cout << "┌─────────" << num << " 학년" << "─────────┐" << endl;
	for (int i = 0; i < StudentCount; i++)
	{
		if (StudentList[i]->Class == num)
			ShowStudent(StudentList[i]);
	}
	cout << "└─────────────────────┘" << endl;
}

void main()
{
	int Select, StudentCount = 0;
	Student* student[STUDENTMAX];
	string tmp;
	bool FindState = true;
	while (1)
	{
		system("cls");
		cout << "===학생정보관리===(학생수 : " << StudentCount << "명)" << endl;
		cout << "   1.학생등록" << endl;
		cout << "   2.학생정보 보기" << endl;
		cout << "   3.학생 검색" << endl;
		cout << "   4.등급별 보기" << endl;
		cout << "   5.학년별 보기" << endl;
		cout << "   6.종료" << endl;
		cout << " 입력 : " << endl;
		cin >> Select;
		system("cls");
		switch (Select)
		{
		case 1:
			if (StudentCount < STUDENTMAX)
			{
				student[StudentCount] = new Student;
				SetStudent(student[StudentCount++], StudentCount);
			}
			break;
		case 2:
			for (int i = 0; i < StudentCount; i++)
				ShowStudent(student[i]);
			system("pause");
			break;
		case 3:
			FindState = false;
			cout << "이름 입력 :";
			cin >> tmp;
			for (int i = 0; i < StudentCount; i++)
			{
				if (student[i]->Name == tmp)
				{
					FindState = true;
					ShowStudent(student[i]);
					break;
				}
			}
			if (FindState == false)
			{
				cout << "해당 학생이 없습니다." << endl;
			}
			system("pause");
			break;
		case 4:
			for (char ch = 'A'; ch <= 'F'; ch++)
			{
				if (ch == 'E')
					continue;
				FindGrade(student, ch, StudentCount);
			}
			system("pause");
			break;
		case 5:
			for (int i = 1; i <= 3; i++)
				FindClass(student, i, StudentCount);
			system("pause");
			break;
		case 6:
			for (int i = 0; i < StudentCount; i++)
			{
				cout << student[i]->Number << "번 학생 : " << student[i]->Name << endl;
				delete student[i];
				cout << "할당 해제 완료" << endl;
			}
			system("pause");
			return;
		}
	}
}


